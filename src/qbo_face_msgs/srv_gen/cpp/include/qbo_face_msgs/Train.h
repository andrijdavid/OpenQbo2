/* Auto-generated by genmsg_cpp for file /home/qbo/Desktop/qbo_ws/src/src/qbo_face_vision/qbo_face_msgs/srv/Train.srv */
#ifndef QBO_FACE_MSGS_SERVICE_TRAIN_H
#define QBO_FACE_MSGS_SERVICE_TRAIN_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace qbo_face_msgs
{
template <class ContainerAllocator>
struct TrainRequest_ {
  typedef TrainRequest_<ContainerAllocator> Type;

  TrainRequest_()
  : update_path()
  {
  }

  TrainRequest_(const ContainerAllocator& _alloc)
  : update_path(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _update_path_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  update_path;


  typedef boost::shared_ptr< ::qbo_face_msgs::TrainRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_face_msgs::TrainRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct TrainRequest
typedef  ::qbo_face_msgs::TrainRequest_<std::allocator<void> > TrainRequest;

typedef boost::shared_ptr< ::qbo_face_msgs::TrainRequest> TrainRequestPtr;
typedef boost::shared_ptr< ::qbo_face_msgs::TrainRequest const> TrainRequestConstPtr;



template <class ContainerAllocator>
struct TrainResponse_ {
  typedef TrainResponse_<ContainerAllocator> Type;

  TrainResponse_()
  : taught(false)
  {
  }

  TrainResponse_(const ContainerAllocator& _alloc)
  : taught(false)
  {
  }

  typedef uint8_t _taught_type;
  uint8_t taught;


  typedef boost::shared_ptr< ::qbo_face_msgs::TrainResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_face_msgs::TrainResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct TrainResponse
typedef  ::qbo_face_msgs::TrainResponse_<std::allocator<void> > TrainResponse;

typedef boost::shared_ptr< ::qbo_face_msgs::TrainResponse> TrainResponsePtr;
typedef boost::shared_ptr< ::qbo_face_msgs::TrainResponse const> TrainResponseConstPtr;


struct Train
{

typedef TrainRequest Request;
typedef TrainResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Train
} // namespace qbo_face_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::TrainRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::TrainRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_face_msgs::TrainRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1aad220b587973074d9a28f4b36ce319";
  }

  static const char* value(const  ::qbo_face_msgs::TrainRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1aad220b58797307ULL;
  static const uint64_t static_value2 = 0x4d9a28f4b36ce319ULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_face_msgs::TrainRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/TrainRequest";
  }

  static const char* value(const  ::qbo_face_msgs::TrainRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_face_msgs::TrainRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
string update_path\n\
\n\
";
  }

  static const char* value(const  ::qbo_face_msgs::TrainRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::TrainResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::TrainResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_face_msgs::TrainResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "045e724eaf9efdeff4f56e372f7e1c92";
  }

  static const char* value(const  ::qbo_face_msgs::TrainResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x045e724eaf9efdefULL;
  static const uint64_t static_value2 = 0xf4f56e372f7e1c92ULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_face_msgs::TrainResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/TrainResponse";
  }

  static const char* value(const  ::qbo_face_msgs::TrainResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_face_msgs::TrainResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool taught\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_face_msgs::TrainResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_face_msgs::TrainResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_face_msgs::TrainRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.update_path);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct TrainRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_face_msgs::TrainResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.taught);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct TrainResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<qbo_face_msgs::Train> {
  static const char* value() 
  {
    return "3f36036a94628f4a1bdb3c1a8d63219a";
  }

  static const char* value(const qbo_face_msgs::Train&) { return value(); } 
};

template<>
struct DataType<qbo_face_msgs::Train> {
  static const char* value() 
  {
    return "qbo_face_msgs/Train";
  }

  static const char* value(const qbo_face_msgs::Train&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_face_msgs::TrainRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3f36036a94628f4a1bdb3c1a8d63219a";
  }

  static const char* value(const qbo_face_msgs::TrainRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_face_msgs::TrainRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/Train";
  }

  static const char* value(const qbo_face_msgs::TrainRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_face_msgs::TrainResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3f36036a94628f4a1bdb3c1a8d63219a";
  }

  static const char* value(const qbo_face_msgs::TrainResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_face_msgs::TrainResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/Train";
  }

  static const char* value(const qbo_face_msgs::TrainResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // QBO_FACE_MSGS_SERVICE_TRAIN_H

