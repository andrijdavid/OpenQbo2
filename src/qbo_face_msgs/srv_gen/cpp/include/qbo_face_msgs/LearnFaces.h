/* Auto-generated by genmsg_cpp for file /home/qbo/Desktop/qbo_ws/src/src/qbo_face_vision/qbo_face_msgs/srv/LearnFaces.srv */
#ifndef QBO_FACE_MSGS_SERVICE_LEARNFACES_H
#define QBO_FACE_MSGS_SERVICE_LEARNFACES_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace qbo_face_msgs
{
template <class ContainerAllocator>
struct LearnFacesRequest_ {
  typedef LearnFacesRequest_<ContainerAllocator> Type;

  LearnFacesRequest_()
  : person_name()
  {
  }

  LearnFacesRequest_(const ContainerAllocator& _alloc)
  : person_name(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _person_name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  person_name;


  typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct LearnFacesRequest
typedef  ::qbo_face_msgs::LearnFacesRequest_<std::allocator<void> > LearnFacesRequest;

typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesRequest> LearnFacesRequestPtr;
typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesRequest const> LearnFacesRequestConstPtr;



template <class ContainerAllocator>
struct LearnFacesResponse_ {
  typedef LearnFacesResponse_<ContainerAllocator> Type;

  LearnFacesResponse_()
  : learned(false)
  {
  }

  LearnFacesResponse_(const ContainerAllocator& _alloc)
  : learned(false)
  {
  }

  typedef uint8_t _learned_type;
  uint8_t learned;


  typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct LearnFacesResponse
typedef  ::qbo_face_msgs::LearnFacesResponse_<std::allocator<void> > LearnFacesResponse;

typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesResponse> LearnFacesResponsePtr;
typedef boost::shared_ptr< ::qbo_face_msgs::LearnFacesResponse const> LearnFacesResponseConstPtr;


struct LearnFaces
{

typedef LearnFacesRequest Request;
typedef LearnFacesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct LearnFaces
} // namespace qbo_face_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e2d6bff7c373fbffae616009ee6a2c27";
  }

  static const char* value(const  ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe2d6bff7c373fbffULL;
  static const uint64_t static_value2 = 0xae616009ee6a2c27ULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/LearnFacesRequest";
  }

  static const char* value(const  ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
string person_name\n\
\n\
";
  }

  static const char* value(const  ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c9e56102f89a9558f44983cd3c0495b4";
  }

  static const char* value(const  ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc9e56102f89a9558ULL;
  static const uint64_t static_value2 = 0xf44983cd3c0495b4ULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/LearnFacesResponse";
  }

  static const char* value(const  ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool learned\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.person_name);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct LearnFacesRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.learned);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct LearnFacesResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<qbo_face_msgs::LearnFaces> {
  static const char* value() 
  {
    return "202b3c7a0bdc1cb06c9cb185e964b34a";
  }

  static const char* value(const qbo_face_msgs::LearnFaces&) { return value(); } 
};

template<>
struct DataType<qbo_face_msgs::LearnFaces> {
  static const char* value() 
  {
    return "qbo_face_msgs/LearnFaces";
  }

  static const char* value(const qbo_face_msgs::LearnFaces&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "202b3c7a0bdc1cb06c9cb185e964b34a";
  }

  static const char* value(const qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/LearnFaces";
  }

  static const char* value(const qbo_face_msgs::LearnFacesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "202b3c7a0bdc1cb06c9cb185e964b34a";
  }

  static const char* value(const qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_face_msgs/LearnFaces";
  }

  static const char* value(const qbo_face_msgs::LearnFacesResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // QBO_FACE_MSGS_SERVICE_LEARNFACES_H

